Лексема                      Токен               Строка    Столбец       ID        
=================================================================================
package                        package         1          1          keyword:0
main                           id-0            1          9          identifier:0
import                         import          3          1          keyword:1
(                              l_paren         3          8          punctuation:0
"fmt"                          string          4          2          constant:0
)                              r_paren         5          1          punctuation:1
const                          const           7          1          keyword:2
(                              l_paren         7          7          punctuation:0
WelcomeMessage                 id-1            8          2          identifier:1
=                              assignment      8          17         operator:0
"Добро пожаловать в калькулятор на Go!" string          8          19         constant:1
ErrorMessage                   id-2            9          2          identifier:2
=                              assignment      9          17         operator:0
"Ошибка: неверный ввод!" string          9          19         constant:2
)                              r_paren         10         1          punctuation:1
func                           func            12         1          keyword:3
calculate                      id-3            12         6          identifier:3
(                              l_paren         12         15         punctuation:0
a                              id-4            12         16         identifier:4
,                              comma           12         17         punctuation:2
b                              id-5            12         19         identifier:5
float64                        float64         12         21         keyword:4
,                              comma           12         28         punctuation:2
operation                      id-6            12         30         identifier:6
string                         string          12         40         keyword:5
)                              r_paren         12         46         punctuation:1
float64                        float64         12         48         keyword:4
{                              l_brace         12         56         punctuation:3
switch                         switch          13         2          keyword:6
operation                      id-6            13         9          identifier:6
{                              l_brace         13         19         punctuation:3
case                           case            14         2          keyword:7
"+"                            string          14         7          constant:3
:                              colon           14         10         punctuation:4
return                         return          15         3          keyword:8
a                              id-4            15         10         identifier:4
+                              plus            15         12         operator:1
b                              id-5            15         14         identifier:5
case                           case            16         2          keyword:7
"-"                            string          16         7          constant:4
:                              colon           16         10         punctuation:4
return                         return          17         3          keyword:8
a                              id-4            17         10         identifier:4
-                              minus           17         12         operator:2
b                              id-5            17         14         identifier:5
case                           case            18         2          keyword:7
"*"                            string          18         7          constant:5
:                              colon           18         10         punctuation:4
return                         return          19         3          keyword:8
a                              id-4            19         10         identifier:4
*                              multiply        19         12         operator:3
b                              id-5            19         14         identifier:5
case                           case            20         2          keyword:7
"/"                            string          20         7          constant:6
:                              colon           20         10         punctuation:4
if                             if              21         3          keyword:9
b                              id-5            21         6          identifier:5
!=                             not_equal       21         8          operator:4
0                              number          21         11         constant:7
{                              l_brace         21         13         punctuation:3
return                         return          22         4          keyword:8
a                              id-4            22         11         identifier:4
/                              divide          22         13         operator:5
b                              id-5            22         15         identifier:5
}                              r_brace         23         3          punctuation:5
fmt                            id-7            24         3          identifier:7
.                              dot             24         6          operator:6
Println                        id-8            24         7          identifier:8
(                              l_paren         24         14         punctuation:0
ErrorMessage                   id-2            24         15         identifier:2
)                              r_paren         24         27         punctuation:1
return                         return          25         3          keyword:8
0                              number          25         10         constant:7
default                        default         26         2          keyword:10
:                              colon           26         9          punctuation:4
fmt                            id-7            27         3          identifier:7
.                              dot             27         6          operator:6
Println                        id-8            27         7          identifier:8
(                              l_paren         27         14         punctuation:0
ErrorMessage                   id-2            27         15         identifier:2
)                              r_paren         27         27         punctuation:1
return                         return          28         3          keyword:8
0                              number          28         10         constant:7
}                              r_brace         29         2          punctuation:5
}                              r_brace         30         1          punctuation:5
func                           func            32         1          keyword:3
main                           id-0            32         6          identifier:0
(                              l_paren         32         10         punctuation:0
)                              r_paren         32         11         punctuation:1
{                              l_brace         32         13         punctuation:3
var                            var             33         2          keyword:11
num1                           id-9            33         6          identifier:9
,                              comma           33         10         punctuation:2
num2                           id-10           33         12         identifier:10
float64                        float64         33         17         keyword:4
var                            var             34         2          keyword:11
operation                      id-6            34         6          identifier:6
string                         string          34         16         keyword:5
var                            var             36         2          keyword:11
flag                           id-11           36         6          identifier:11
bool                           bool            36         11         keyword:12
=                              assignment      36         16         operator:0
false                          id-12           36         18         identifier:12
flag1                          id-13           37         2          identifier:13
:=                             declaration     37         8          operator:7
true                           id-14           37         11         identifier:14
flag                           id-11           38         2          identifier:11
=                              assignment      38         7          operator:0
true                           id-14           38         9          identifier:14
fmt                            id-7            40         2          identifier:7
.                              dot             40         5          operator:6
Print                          id-15           40         6          identifier:15
(                              l_paren         40         11         punctuation:0
flag                           id-11           40         12         identifier:11
)                              r_paren         40         16         punctuation:1
fmt                            id-7            41         2          identifier:7
.                              dot             41         5          operator:6
Print                          id-15           41         6          identifier:15
(                              l_paren         41         11         punctuation:0
flag1                          id-13           41         12         identifier:13
)                              r_paren         41         17         punctuation:1
fmt                            id-7            43         2          identifier:7
.                              dot             43         5          operator:6
Println                        id-8            43         6          identifier:8
(                              l_paren         43         13         punctuation:0
WelcomeMessage                 id-1            43         14         identifier:1
)                              r_paren         43         28         punctuation:1
fmt                            id-7            44         2          identifier:7
.                              dot             44         5          operator:6
Print                          id-15           44         6          identifier:15
(                              l_paren         44         11         punctuation:0
"Введите первое число: " string          44         12         constant:8
)                              r_paren         44         54         punctuation:1
fmt                            id-7            45         2          identifier:7
.                              dot             45         5          operator:6
Scan                           id-16           45         6          identifier:16
(                              l_paren         45         10         punctuation:0
&                              bitwise_and     45         11         operator:8
num1                           id-9            45         12         identifier:9
)                              r_paren         45         16         punctuation:1
fmt                            id-7            46         2          identifier:7
.                              dot             46         5          operator:6
Print                          id-15           46         6          identifier:15
(                              l_paren         46         11         punctuation:0
"Введите второе число: " string          46         12         constant:9
)                              r_paren         46         54         punctuation:1
fmt                            id-7            47         2          identifier:7
.                              dot             47         5          operator:6
Scan                           id-16           47         6          identifier:16
(                              l_paren         47         10         punctuation:0
&                              bitwise_and     47         11         operator:8
num2                           id-10           47         12         identifier:10
)                              r_paren         47         16         punctuation:1
fmt                            id-7            48         2          identifier:7
.                              dot             48         5          operator:6
Print                          id-15           48         6          identifier:15
(                              l_paren         48         11         punctuation:0
"Введите операцию (+, -, *, /): " string          48         12         constant:10
)                              r_paren         48         60         punctuation:1
fmt                            id-7            49         2          identifier:7
.                              dot             49         5          operator:6
Scan                           id-16           49         6          identifier:16
(                              l_paren         49         10         punctuation:0
&                              bitwise_and     49         11         operator:8
operation                      id-6            49         12         identifier:6
)                              r_paren         49         21         punctuation:1
if                             if              51         2          keyword:9
operation                      id-6            51         5          identifier:6
==                             equal           51         15         operator:9
"+"                            string          51         18         constant:3
|                              bitwise_or      51         22         operator:10
|                              bitwise_or      51         23         operator:10
operation                      id-6            51         25         identifier:6
==                             equal           51         35         operator:9
"-"                            string          51         38         constant:4
|                              bitwise_or      51         42         operator:10
|                              bitwise_or      51         43         operator:10
operation                      id-6            51         45         identifier:6
==                             equal           51         55         operator:9
"*"                            string          51         58         constant:5
|                              bitwise_or      51         62         operator:10
|                              bitwise_or      51         63         operator:10
operation                      id-6            51         65         identifier:6
==                             equal           51         75         operator:9
"/"                            string          51         78         constant:6
{                              l_brace         51         82         punctuation:3
result                         id-17           52         3          identifier:17
:=                             declaration     52         10         operator:7
calculate                      id-3            52         13         identifier:3
(                              l_paren         52         22         punctuation:0
num1                           id-9            52         23         identifier:9
,                              comma           52         27         punctuation:2
num2                           id-10           52         29         identifier:10
,                              comma           52         33         punctuation:2
operation                      id-6            52         35         identifier:6
)                              r_paren         52         44         punctuation:1
fmt                            id-7            53         3          identifier:7
.                              dot             53         6          operator:6
Printf                         id-18           53         7          identifier:18
(                              l_paren         53         13         punctuation:0
"Результат: %.2f\n"   string          53         14         constant:11
,                              comma           53         42         punctuation:2
result                         id-17           53         44         identifier:17
)                              r_paren         53         50         punctuation:1
}                              r_brace         54         2          punctuation:5
else                           else            54         4          keyword:13
{                              l_brace         54         9          punctuation:3
fmt                            id-7            55         3          identifier:7
.                              dot             55         6          operator:6
Println                        id-8            55         7          identifier:8
(                              l_paren         55         14         punctuation:0
ErrorMessage                   id-2            55         15         identifier:2
)                              r_paren         55         27         punctuation:1
}                              r_brace         56         2          punctuation:5
}                              r_brace         57         1          punctuation:5
