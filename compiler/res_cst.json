{
  "children": [
    {
      "nodes": [
        {
          "Name": "package",
          "Pos": 0,
          "Text": "package"
        },
        {
          "Name": "id-0",
          "Pos": 1,
          "Text": "main"
        },
        {
          "Name": "semicolon",
          "Pos": 2,
          "Text": ";"
        }
      ],
      "type": "PackageDeclaration"
    },
    {
      "body": [
        {
          "nodes": [
            {
              "Name": "id-4",
              "Pos": 13,
              "Text": "c"
            },
            {
              "Name": "declaration",
              "Pos": 14,
              "Text": ":="
            },
            {
              "type": "Expression",
              "value": {
                "left": {
                  "left": {
                    "left": {
                      "Pos": 15,
                      "type": "Identifier",
                      "value": "a"
                    },
                    "operator": {
                      "Pos": 16,
                      "type": "Operator",
                      "value": "+"
                    },
                    "right": {
                      "Pos": 17,
                      "type": "Identifier",
                      "value": "b"
                    },
                    "type": "BinaryOperation"
                  },
                  "operator": {
                    "Pos": 18,
                    "type": "Operator",
                    "value": "+"
                  },
                  "right": {
                    "Pos": 19,
                    "type": "NumberLiteral",
                    "value": "1"
                  },
                  "type": "BinaryOperation"
                },
                "operator": {
                  "Pos": 20,
                  "type": "Operator",
                  "value": "+"
                },
                "right": {
                  "Pos": 21,
                  "type": "NumberLiteral",
                  "value": "4"
                },
                "type": "BinaryOperation"
              }
            },
            {
              "Name": "semicolon",
              "Pos": 22,
              "Text": ";"
            }
          ],
          "type": "VariableDeclaration"
        },
        {
          "expression": {
            "Pos": 24,
            "type": "Identifier",
            "value": "c"
          },
          "nodes": [
            {
              "Name": "return",
              "Pos": 23,
              "Text": "return"
            },
            {
              "Name": "semicolon",
              "Pos": 25,
              "Text": ";"
            }
          ],
          "type": "ReturnStatement"
        }
      ],
      "name": "add",
      "nodes": [
        {
          "Name": "func",
          "Pos": 3,
          "Text": "func"
        },
        {
          "Name": "id-1",
          "Pos": 4,
          "Text": "add"
        },
        {
          "Name": "l_paren",
          "Pos": 5,
          "Text": "("
        },
        {
          "Name": "r_paren",
          "Pos": 10,
          "Text": ")"
        },
        {
          "Name": "l_brace",
          "Pos": 12,
          "Text": "{"
        },
        {
          "Name": "r_brace",
          "Pos": 26,
          "Text": "}"
        },
        {
          "Name": "semicolon",
          "Pos": 27,
          "Text": ";"
        }
      ],
      "params": [
        {
          "param_name": {
            "Name": "id-2",
            "Pos": 6,
            "Text": "a"
          },
          "param_type": {
            "Name": "int",
            "Pos": 7,
            "Text": "int"
          }
        },
        {
          "param_name": {
            "Name": "id-3",
            "Pos": 8,
            "Text": "b"
          },
          "param_type": {
            "Name": "int",
            "Pos": 9,
            "Text": "int"
          }
        }
      ],
      "return_types": [
        {
          "Name": "int",
          "Pos": 11,
          "Text": "int"
        }
      ],
      "type": "FunctionDeclaration"
    }
  ],
  "type": "Program"
}
