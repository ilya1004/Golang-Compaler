{
   "children" : [
      {
         "nodes" : [
            {
               "Name" : "package",
               "Pos" : 0,
               "Text" : "package"
            },
            {
               "Name" : "id-0",
               "Pos" : 1,
               "Text" : "main"
            },
            {
               "Name" : "semicolon",
               "Pos" : 2,
               "Text" : ";"
            }
         ],
         "type" : "PackageDeclaration"
      },
      {
         "imports" : [
            {
               "package" : {
                  "Name" : "string",
                  "Pos" : 5,
                  "Text" : "\"fmt\""
               },
               "semicolon" : {
                  "Name" : "semicolon",
                  "Pos" : 6,
                  "Text" : ";"
               }
            }
         ],
         "nodes" : [
            {
               "Name" : "import",
               "Pos" : 3,
               "Text" : "import"
            },
            {
               "Name" : "l_paren",
               "Pos" : 4,
               "Text" : "("
            },
            {
               "Name" : "r_paren",
               "Pos" : 7,
               "Text" : ")"
            },
            {
               "Name" : "semicolon",
               "Pos" : 8,
               "Text" : ";"
            }
         ],
         "type" : "ImportDeclaration"
      },
      {
         "nodes" : [
            {
               "Name" : "const",
               "Pos" : 9,
               "Text" : "const"
            },
            {
               "Name" : "id-1",
               "Pos" : 10,
               "Text" : "WelcomeMessage"
            },
            {
               "Name" : "assignment",
               "Pos" : 11,
               "Text" : "="
            },
            {
               "Name" : "string",
               "Pos" : 12,
               "Text" : "\"Добро пожаловать в калькулятор на Go!\""
            },
            {
               "Name" : "semicolon",
               "Pos" : 13,
               "Text" : ";"
            }
         ],
         "type" : "ConstDeclaration"
      },
      {
         "nodes" : [
            {
               "Name" : "const",
               "Pos" : 14,
               "Text" : "const"
            },
            {
               "Name" : "id-2",
               "Pos" : 15,
               "Text" : "ErrorMessage"
            },
            {
               "Name" : "assignment",
               "Pos" : 16,
               "Text" : "="
            },
            {
               "Name" : "string",
               "Pos" : 17,
               "Text" : "\"Ошибка: неверный ввод!\""
            },
            {
               "Name" : "semicolon",
               "Pos" : 18,
               "Text" : ";"
            }
         ],
         "type" : "ConstDeclaration"
      },
      {
         "body" : [
            {
               "cases" : [
                  {
                     "body" : [
                        {
                           "expression" : {
                              "left" : {
                                 "Pos" : 34,
                                 "type" : "Identifier",
                                 "value" : "a"
                              },
                              "operator" : {
                                 "Pos" : 35,
                                 "type" : "Operator",
                                 "value" : "+"
                              },
                              "right" : {
                                 "Pos" : 36,
                                 "type" : "Identifier",
                                 "value" : "b"
                              },
                              "type" : "BinaryOperation"
                           },
                           "nodes" : [
                              {
                                 "Name" : "return",
                                 "Pos" : 33,
                                 "Text" : "return"
                              },
                              {
                                 "Name" : "semicolon",
                                 "Pos" : 37,
                                 "Text" : ";"
                              }
                           ],
                           "type" : "ReturnStatement"
                        }
                     ],
                     "type" : "CaseStatement",
                     "value" : {
                        "Pos" : 31,
                        "type" : "StringLiteral",
                        "value" : "\"+\""
                     }
                  },
                  {
                     "body" : [
                        {
                           "expression" : {
                              "left" : {
                                 "Pos" : 42,
                                 "type" : "Identifier",
                                 "value" : "a"
                              },
                              "operator" : {
                                 "Pos" : 43,
                                 "type" : "Operator",
                                 "value" : "-"
                              },
                              "right" : {
                                 "Pos" : 44,
                                 "type" : "Identifier",
                                 "value" : "b"
                              },
                              "type" : "BinaryOperation"
                           },
                           "nodes" : [
                              {
                                 "Name" : "return",
                                 "Pos" : 41,
                                 "Text" : "return"
                              },
                              {
                                 "Name" : "semicolon",
                                 "Pos" : 45,
                                 "Text" : ";"
                              }
                           ],
                           "type" : "ReturnStatement"
                        }
                     ],
                     "type" : "CaseStatement",
                     "value" : {
                        "Pos" : 39,
                        "type" : "StringLiteral",
                        "value" : "\"-\""
                     }
                  },
                  {
                     "body" : [
                        {
                           "expression" : {
                              "left" : {
                                 "Pos" : 50,
                                 "type" : "Identifier",
                                 "value" : "a"
                              },
                              "operator" : {
                                 "Pos" : 51,
                                 "type" : "Operator",
                                 "value" : "*"
                              },
                              "right" : {
                                 "Pos" : 52,
                                 "type" : "Identifier",
                                 "value" : "b"
                              },
                              "type" : "BinaryOperation"
                           },
                           "nodes" : [
                              {
                                 "Name" : "return",
                                 "Pos" : 49,
                                 "Text" : "return"
                              },
                              {
                                 "Name" : "semicolon",
                                 "Pos" : 53,
                                 "Text" : ";"
                              }
                           ],
                           "type" : "ReturnStatement"
                        }
                     ],
                     "type" : "CaseStatement",
                     "value" : {
                        "Pos" : 47,
                        "type" : "StringLiteral",
                        "value" : "\"*\""
                     }
                  },
                  {
                     "body" : [
                        {
                           "body" : [
                              {
                                 "expression" : {
                                    "left" : {
                                       "Pos" : 62,
                                       "type" : "Identifier",
                                       "value" : "a"
                                    },
                                    "operator" : {
                                       "Pos" : 63,
                                       "type" : "Operator",
                                       "value" : "/"
                                    },
                                    "right" : {
                                       "Pos" : 64,
                                       "type" : "Identifier",
                                       "value" : "b"
                                    },
                                    "type" : "BinaryOperation"
                                 },
                                 "nodes" : [
                                    {
                                       "Name" : "return",
                                       "Pos" : 61,
                                       "Text" : "return"
                                    },
                                    {
                                       "Name" : "semicolon",
                                       "Pos" : 65,
                                       "Text" : ";"
                                    }
                                 ],
                                 "type" : "ReturnStatement"
                              }
                           ],
                           "condition" : {
                              "left" : {
                                 "Pos" : 58,
                                 "type" : "Identifier",
                                 "value" : "b"
                              },
                              "operator" : {
                                 "Pos" : 59,
                                 "type" : "Operator",
                                 "value" : "!="
                              },
                              "right" : {
                                 "Pos" : 59,
                                 "type" : "NumberLiteral",
                                 "value" : "0"
                              },
                              "type" : "RelationalExpression"
                           },
                           "else_body" : [],
                           "else_if" : [],
                           "nodes" : [
                              {
                                 "Name" : "if",
                                 "Pos" : 57,
                                 "Text" : "if"
                              },
                              {
                                 "Name" : "l_brace",
                                 "Pos" : 60,
                                 "Text" : "{"
                              },
                              {
                                 "Name" : "r_brace",
                                 "Pos" : 66,
                                 "Text" : "}"
                              }
                           ],
                           "type" : "IfStatement"
                        },
                        {
                           "args" : [
                              {
                                 "Pos" : 70,
                                 "type" : "Identifier",
                                 "value" : "ErrorMessage"
                              }
                           ],
                           "name" : "Println",
                           "nodes" : [
                              {
                                 "Name" : "l_paren",
                                 "Pos" : 69,
                                 "Text" : "("
                              },
                              {
                                 "Name" : "r_paren",
                                 "Pos" : 71,
                                 "Text" : ")"
                              }
                           ],
                           "package" : "fmt",
                           "type" : "FunctionCall"
                        },
                        {
                           "expression" : {
                              "Pos" : 73,
                              "type" : "NumberLiteral",
                              "value" : "0"
                           },
                           "nodes" : [
                              {
                                 "Name" : "return",
                                 "Pos" : 72,
                                 "Text" : "return"
                              },
                              {
                                 "Name" : "semicolon",
                                 "Pos" : 74,
                                 "Text" : ";"
                              }
                           ],
                           "type" : "ReturnStatement"
                        }
                     ],
                     "type" : "CaseStatement",
                     "value" : {
                        "Pos" : 55,
                        "type" : "StringLiteral",
                        "value" : "\"/\""
                     }
                  },
                  {
                     "body" : [
                        {
                           "args" : [
                              {
                                 "Pos" : 80,
                                 "type" : "Identifier",
                                 "value" : "ErrorMessage"
                              }
                           ],
                           "name" : "Println",
                           "nodes" : [
                              {
                                 "Name" : "l_paren",
                                 "Pos" : 79,
                                 "Text" : "("
                              },
                              {
                                 "Name" : "r_paren",
                                 "Pos" : 81,
                                 "Text" : ")"
                              }
                           ],
                           "package" : "fmt",
                           "type" : "FunctionCall"
                        },
                        {
                           "expression" : {
                              "Pos" : 83,
                              "type" : "NumberLiteral",
                              "value" : "0"
                           },
                           "nodes" : [
                              {
                                 "Name" : "return",
                                 "Pos" : 82,
                                 "Text" : "return"
                              },
                              {
                                 "Name" : "semicolon",
                                 "Pos" : 84,
                                 "Text" : ";"
                              }
                           ],
                           "type" : "ReturnStatement"
                        }
                     ],
                     "type" : "DefaultStatement"
                  }
               ],
               "condition" : {
                  "Pos" : 28,
                  "type" : "Identifier",
                  "value" : "operation"
               },
               "nodes" : [
                  {
                     "Name" : "switch",
                     "Pos" : 27,
                     "Text" : "switch"
                  },
                  {
                     "Name" : "l_brace",
                     "Pos" : 29,
                     "Text" : "{"
                  },
                  {
                     "Name" : "case",
                     "Pos" : 30,
                     "Text" : "case"
                  },
                  {
                     "Name" : "colon",
                     "Pos" : 32,
                     "Text" : ":"
                  },
                  {
                     "Name" : "case",
                     "Pos" : 38,
                     "Text" : "case"
                  },
                  {
                     "Name" : "colon",
                     "Pos" : 40,
                     "Text" : ":"
                  },
                  {
                     "Name" : "case",
                     "Pos" : 46,
                     "Text" : "case"
                  },
                  {
                     "Name" : "colon",
                     "Pos" : 48,
                     "Text" : ":"
                  },
                  {
                     "Name" : "case",
                     "Pos" : 54,
                     "Text" : "case"
                  },
                  {
                     "Name" : "colon",
                     "Pos" : 56,
                     "Text" : ":"
                  },
                  {
                     "Name" : "default",
                     "Pos" : 75,
                     "Text" : "default"
                  },
                  {
                     "Name" : "colon",
                     "Pos" : 76,
                     "Text" : ":"
                  },
                  {
                     "Name" : "r_brace",
                     "Pos" : 85,
                     "Text" : "}"
                  }
               ],
               "type" : "SwitchStatement"
            }
         ],
         "name" : "calculate",
         "nodes" : [
            {
               "Name" : "func",
               "Pos" : 19,
               "Text" : "func"
            },
            {
               "Name" : "id-3",
               "Pos" : 20,
               "Text" : "calculate"
            },
            {
               "Name" : "l_paren",
               "Pos" : 21,
               "Text" : "("
            },
            {
               "Name" : "r_paren",
               "Pos" : 25,
               "Text" : ")"
            },
            {
               "Name" : "l_brace",
               "Pos" : 26,
               "Text" : "{"
            },
            {
               "Name" : "r_brace",
               "Pos" : 86,
               "Text" : "}"
            },
            {
               "Name" : "semicolon",
               "Pos" : 87,
               "Text" : ";"
            }
         ],
         "params" : [
            {
               "param_name" : {
                  "Name" : "id-4",
                  "Pos" : 22,
                  "Text" : "a"
               },
               "param_type" : "float64"
            },
            {
               "param_name" : {
                  "Name" : "id-5",
                  "Pos" : 23,
                  "Text" : "b"
               },
               "param_type" : "float64"
            },
            {
               "param_name" : {
                  "Name" : "id-6",
                  "Pos" : 24,
                  "Text" : "operation"
               },
               "param_type" : "string"
            }
         ],
         "return_types" : [
            "float64"
         ],
         "type" : "FunctionDeclaration"
      },
      {
         "body" : [
            {
               "nodes" : [
                  {
                     "Name" : "var",
                     "Pos" : 93,
                     "Text" : "var"
                  },
                  {
                     "Name" : "id-9",
                     "Pos" : 94,
                     "Text" : "num1"
                  },
                  {
                     "Name" : "comma",
                     "Pos" : 95,
                     "Text" : ","
                  },
                  {
                     "Name" : "id-10",
                     "Pos" : 96,
                     "Text" : "num2"
                  },
                  {
                     "Name" : "Type",
                     "Pos" : 97,
                     "Text" : "float64"
                  },
                  {
                     "Name" : "semicolon",
                     "Pos" : 98,
                     "Text" : ";"
                  }
               ],
               "type" : "VariableDeclaration"
            },
            {
               "nodes" : [
                  {
                     "Name" : "var",
                     "Pos" : 99,
                     "Text" : "var"
                  },
                  {
                     "Name" : "id-6",
                     "Pos" : 100,
                     "Text" : "operation"
                  },
                  {
                     "Name" : "Type",
                     "Pos" : 101,
                     "Text" : "string"
                  },
                  {
                     "Name" : "semicolon",
                     "Pos" : 102,
                     "Text" : ";"
                  }
               ],
               "type" : "VariableDeclaration"
            },
            {
               "nodes" : [
                  {
                     "Name" : "var",
                     "Pos" : 103,
                     "Text" : "var"
                  },
                  {
                     "Name" : "id-11",
                     "Pos" : 104,
                     "Text" : "flag"
                  },
                  {
                     "Name" : "Type",
                     "Pos" : 105,
                     "Text" : "bool"
                  },
                  {
                     "Name" : "assignment",
                     "Pos" : 106,
                     "Text" : "="
                  },
                  {
                     "type" : "Expression",
                     "value" : {
                        "Pos" : 107,
                        "type" : "Identifier",
                        "value" : "false"
                     }
                  },
                  {
                     "Name" : "semicolon",
                     "Pos" : 108,
                     "Text" : ";"
                  }
               ],
               "type" : "VariableDeclaration"
            },
            {
               "nodes" : [
                  {
                     "Name" : "id-13",
                     "Pos" : 109,
                     "Text" : "flag1"
                  },
                  {
                     "Name" : "declaration",
                     "Pos" : 110,
                     "Text" : ":="
                  },
                  {
                     "type" : "Expression",
                     "value" : {
                        "Pos" : 111,
                        "type" : "Identifier",
                        "value" : "true"
                     }
                  },
                  {
                     "Name" : "semicolon",
                     "Pos" : 112,
                     "Text" : ";"
                  }
               ],
               "type" : "VariableDeclaration"
            },
            {
               "left" : {
                  "Pos" : 113,
                  "type" : "Identifier",
                  "value" : "flag"
               },
               "operator" : {
                  "Pos" : 114,
                  "type" : "Operator",
                  "value" : "="
               },
               "right" : {
                  "Pos" : 115,
                  "type" : "Identifier",
                  "value" : "true"
               },
               "semicolon" : {
                  "Pos" : 116,
                  "type" : "Punctuation",
                  "value" : ";"
               },
               "type" : "AssignmentExpression"
            },
            {
               "args" : [
                  {
                     "Pos" : 120,
                     "type" : "Identifier",
                     "value" : "flag"
                  }
               ],
               "name" : "Print",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 119,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 121,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 125,
                     "type" : "Identifier",
                     "value" : "flag1"
                  }
               ],
               "name" : "Print",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 124,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 126,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 130,
                     "type" : "Identifier",
                     "value" : "WelcomeMessage"
                  }
               ],
               "name" : "Println",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 129,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 131,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 135,
                     "type" : "StringLiteral",
                     "value" : "\"Введите первое число: \""
                  }
               ],
               "name" : "Print",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 134,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 136,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 141,
                     "is_by_reference" : 1,
                     "type" : "Identifier",
                     "value" : "num1"
                  }
               ],
               "name" : "Scan",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 139,
                     "Text" : "("
                  },
                  {
                     "Name" : "bitwise_and",
                     "Pos" : 140,
                     "Text" : "&"
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 142,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 146,
                     "type" : "StringLiteral",
                     "value" : "\"Введите второе число: \""
                  }
               ],
               "name" : "Print",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 145,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 147,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 152,
                     "is_by_reference" : 1,
                     "type" : "Identifier",
                     "value" : "num2"
                  }
               ],
               "name" : "Scan",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 150,
                     "Text" : "("
                  },
                  {
                     "Name" : "bitwise_and",
                     "Pos" : 151,
                     "Text" : "&"
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 153,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 157,
                     "type" : "StringLiteral",
                     "value" : "\"Введите операцию (+, -, *, /): \""
                  }
               ],
               "name" : "Print",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 156,
                     "Text" : "("
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 158,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "args" : [
                  {
                     "Pos" : 163,
                     "is_by_reference" : 1,
                     "type" : "Identifier",
                     "value" : "operation"
                  }
               ],
               "name" : "Scan",
               "nodes" : [
                  {
                     "Name" : "l_paren",
                     "Pos" : 161,
                     "Text" : "("
                  },
                  {
                     "Name" : "bitwise_and",
                     "Pos" : 162,
                     "Text" : "&"
                  },
                  {
                     "Name" : "r_paren",
                     "Pos" : 164,
                     "Text" : ")"
                  }
               ],
               "package" : "fmt",
               "type" : "FunctionCall"
            },
            {
               "body" : [
                  {
                     "nodes" : [
                        {
                           "Name" : "id-17",
                           "Pos" : 175,
                           "Text" : "result"
                        },
                        {
                           "Name" : "declaration",
                           "Pos" : 176,
                           "Text" : ":="
                        },
                        {
                           "type" : "Expression",
                           "value" : {
                              "args" : [
                                 {
                                    "Pos" : 179,
                                    "type" : "Identifier",
                                    "value" : "num1"
                                 },
                                 {
                                    "Pos" : 181,
                                    "type" : "Identifier",
                                    "value" : "num2"
                                 },
                                 {
                                    "Pos" : 183,
                                    "type" : "Identifier",
                                    "value" : "operation"
                                 }
                              ],
                              "name" : "calculate",
                              "package" : null,
                              "type" : "FunctionCall"
                           }
                        },
                        {
                           "Name" : "semicolon",
                           "Pos" : 185,
                           "Text" : ";"
                        }
                     ],
                     "type" : "VariableDeclaration"
                  },
                  {
                     "args" : [
                        {
                           "Pos" : 189,
                           "type" : "StringLiteral",
                           "value" : "\"Результат: %.2f\\n\""
                        },
                        {
                           "Pos" : 191,
                           "type" : "Identifier",
                           "value" : "result"
                        }
                     ],
                     "name" : "Printf",
                     "nodes" : [
                        {
                           "Name" : "l_paren",
                           "Pos" : 188,
                           "Text" : "("
                        },
                        {
                           "Name" : "comma",
                           "Pos" : 190,
                           "Text" : ","
                        },
                        {
                           "Name" : "r_paren",
                           "Pos" : 192,
                           "Text" : ")"
                        }
                     ],
                     "package" : "fmt",
                     "type" : "FunctionCall"
                  }
               ],
               "condition" : {
                  "left" : {
                     "left" : {
                        "left" : {
                           "left" : {
                              "Pos" : 166,
                              "type" : "Identifier",
                              "value" : "operation"
                           },
                           "operator" : {
                              "Pos" : 167,
                              "type" : "Operator",
                              "value" : "=="
                           },
                           "right" : {
                              "Pos" : 167,
                              "type" : "StringLiteral",
                              "value" : "\"+\""
                           },
                           "type" : "RelationalExpression"
                        },
                        "operator" : {
                           "Pos" : 168,
                           "type" : "Operator",
                           "value" : "||"
                        },
                        "right" : {
                           "left" : {
                              "Pos" : 168,
                              "type" : "Identifier",
                              "value" : "operation"
                           },
                           "operator" : {
                              "Pos" : 169,
                              "type" : "Operator",
                              "value" : "=="
                           },
                           "right" : {
                              "Pos" : 169,
                              "type" : "StringLiteral",
                              "value" : "\"-\""
                           },
                           "type" : "RelationalExpression"
                        },
                        "type" : "LogicalExpression"
                     },
                     "operator" : {
                        "Pos" : 170,
                        "type" : "Operator",
                        "value" : "||"
                     },
                     "right" : {
                        "left" : {
                           "Pos" : 170,
                           "type" : "Identifier",
                           "value" : "operation"
                        },
                        "operator" : {
                           "Pos" : 171,
                           "type" : "Operator",
                           "value" : "=="
                        },
                        "right" : {
                           "Pos" : 171,
                           "type" : "StringLiteral",
                           "value" : "\"*\""
                        },
                        "type" : "RelationalExpression"
                     },
                     "type" : "LogicalExpression"
                  },
                  "operator" : {
                     "Pos" : 172,
                     "type" : "Operator",
                     "value" : "||"
                  },
                  "right" : {
                     "left" : {
                        "Pos" : 172,
                        "type" : "Identifier",
                        "value" : "operation"
                     },
                     "operator" : {
                        "Pos" : 173,
                        "type" : "Operator",
                        "value" : "=="
                     },
                     "right" : {
                        "Pos" : 173,
                        "type" : "StringLiteral",
                        "value" : "\"/\""
                     },
                     "type" : "RelationalExpression"
                  },
                  "type" : "LogicalExpression"
               },
               "else_body" : [
                  {
                     "args" : [
                        {
                           "Pos" : 199,
                           "type" : "Identifier",
                           "value" : "ErrorMessage"
                        }
                     ],
                     "name" : "Println",
                     "nodes" : [
                        {
                           "Name" : "l_paren",
                           "Pos" : 198,
                           "Text" : "("
                        },
                        {
                           "Name" : "r_paren",
                           "Pos" : 200,
                           "Text" : ")"
                        }
                     ],
                     "package" : "fmt",
                     "type" : "FunctionCall"
                  }
               ],
               "else_if" : [],
               "nodes" : [
                  {
                     "Name" : "if",
                     "Pos" : 165,
                     "Text" : "if"
                  },
                  {
                     "Name" : "l_brace",
                     "Pos" : 174,
                     "Text" : "{"
                  },
                  {
                     "Name" : "r_brace",
                     "Pos" : 193,
                     "Text" : "}"
                  },
                  {
                     "Name" : "else",
                     "Pos" : 194,
                     "Text" : "else"
                  },
                  {
                     "Name" : "l_brace",
                     "Pos" : 195,
                     "Text" : "{"
                  },
                  {
                     "Name" : "r_brace",
                     "Pos" : 201,
                     "Text" : "}"
                  }
               ],
               "type" : "IfStatement"
            }
         ],
         "name" : "main",
         "nodes" : [
            {
               "Name" : "func",
               "Pos" : 88,
               "Text" : "func"
            },
            {
               "Name" : "id-0",
               "Pos" : 89,
               "Text" : "main"
            },
            {
               "Name" : "l_paren",
               "Pos" : 90,
               "Text" : "("
            },
            {
               "Name" : "r_paren",
               "Pos" : 91,
               "Text" : ")"
            },
            {
               "Name" : "l_brace",
               "Pos" : 92,
               "Text" : "{"
            },
            {
               "Name" : "r_brace",
               "Pos" : 202,
               "Text" : "}"
            },
            {
               "Name" : "semicolon",
               "Pos" : 203,
               "Text" : ";"
            }
         ],
         "params" : [],
         "return_types" : [],
         "type" : "FunctionDeclaration"
      }
   ],
   "type" : "Program"
}
